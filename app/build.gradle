plugins {
    alias(libs.plugins.androidApplication)
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}


android {
    namespace 'com.example.munchkin'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.munchkin"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    testOptions {
        unitTests.all {
            useJUnitPlatform()
            finalizedBy jacocoTestReport
        }
    }
}

    tasks.register('jacocoTestReport', JacocoReport) {
        dependsOn 'testDebugUnitTest'

        reports {
            xml.required = true
            xml.destination file("${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
        }

        def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
        def debugTree = fileTree(dir: "${project.layout.buildDirectory.get().asFile}/intermediates/javac/debug", excludes: fileFilter)
        def mainSrc = "${project.projectDir}/src/main/java"

        sourceDirectories.from = files([mainSrc])
        classDirectories.from = files([debugTree])
        executionData.from = files("${project.layout.buildDirectory.get().asFile}/jacoco/testDebugUnitTest.exec")

    }

    sonar {
        properties {
            property "sonar.projectKey", "SEIIGruppe2_App"
            property "sonar.organization", "seiigruppe2"
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.java.coveragePlugin", "jacoco"
            property "sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
        }
    }

       dependencies {

            implementation libs.appcompat
            implementation libs.material
            implementation libs.activity
            implementation libs.constraintlayout
           implementation libs.navigation.fragment
           implementation libs.navigation.ui
           implementation libs.leanback
           implementation libs.glide
           testImplementation libs.junit
            androidTestImplementation libs.ext.junit
            androidTestImplementation libs.espresso.core
            implementation libs.okhttp
            testImplementation libs.junit.jupiter.api
            testRuntimeOnly libs.junit.jupiter.engine
            implementation 'org.glassfish.tyrus.bundles:tyrus-standalone-client:1.17'
            androidTestImplementation 'org.mockito:mockito-core:3.11.2'
            testImplementation 'org.mockito:mockito-core:3.11.2'

            testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'
            testImplementation 'org.json:json:20210307'
        }

